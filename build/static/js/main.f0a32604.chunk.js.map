{"version":3,"sources":["pages/operacional/connect.ts","components/header/index.tsx","components/footer/index.tsx","components/select/index.tsx","components/card/default/index.tsx","components/charts/bar/index.tsx","utils/constants.ts","redux/actions/pages/operational.ts","pages/operacional/index.tsx","redux/actions/pages/tactical.ts","components/charts/barMix/index.tsx","pages/tactical/connect.ts","pages/tactical/index.tsx","serviceWorker.ts","redux/reducers/pages/operational.ts","redux/reducers/pages/tactical.ts","redux/reducers/index.ts","index.tsx"],"names":["componentClass","MyHeader","react","Navbar","Header","Brand","href","Toggle","Nav","NavItem","eventKey","React","MyFooter","fixedBottom","color","Collapse","Text","Select","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelect","bind","assertThisInitialized","value","options","map","option","index","key","label","FormGroup","controlId","control_id","Label","FormControl","placeholder","onChange","renderOptions","Card","id","className","header","children","MyBarChart","data_key","length","Bar","dataKey","fill","BarChart","width","height","heigth","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","xname","YAxis","Tooltip","Legend","ReferenceLine","y","stroke","renderBars","Constants","URL","idFuncionario","inicio","fim","ano","mes","turno","RH","address","routes","HorasTrabalhadas","Treinamentos","Values","Funcionarios","Production","getProducaoByUsuario","getProducaoByTurno","getProducaoByAno","getProducaoByAnoMes","getDescricaoProduto","getAllProdutos","getProdutoById","getQtdItemNegociado","getOrigemItem","getAllItens","getAllNotas","getNotasByUsuario","getAllValoresNotas","getNotasByTipoMovimentacao","getAllProducaoPorMesTurno","getEstoqueMP","Sales","EventosClasses","Vendas","Pedidos","PedidosPeriodo","Financial","Produto","Registro_De_Venda","Solicitacao_de_Compra","Setors","GastosProducao","Conta_Pagar","CustoMateriaPrima","SuprimentoDeCaixa","operationalActions","fetchProductionOrders","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","orders","wrap","_context","prev","next","axios","get","concat","then","response","catch","error","console","log","sent","abrupt","stop","apply","arguments","createOptionsProductionOrder","IdPedido","toString","setOptions","type","payload","setProductionOrders","setCost","cost","setStock","stock","mapStateToProps","state","own","cost_raw_material","operationalPage","selected_order","production_orders","mapDispatchToProps","dispatch","fetchCostRawMaterial","setSelectedOrder","order","fetchOptions","getStock","OperacionalPage","event","production_order","find","prod","Number","target","setState","name","estoque","quantidade","Form","components_select","card_default","format","Date","dataPedido","cliente","Math","abs","toFixed","bar","footer","connect","Months","tacticalActions","setProduction","production","setTotalHours","hours","setProduct","product","fetchProduction","month","year","headers","Content-Type","Access-Control-Allow-Origin","processProductionByMonth","_x","_x2","fetchHoursMonth","_ref2","_callee2","retorno","_context2","processWokedHours","_x3","getMonthName","result","forEach","worked","quant","work","HorasTrabalhadasNoMes","processProductionsOrders","quant_total","productions","month_name","all","compact","stackId","mapStateToPros","tacticalPage","worked_hours","fetchProdOrders","start","startOfMonth","end","endOfMonth","fetchProduct","setYear","setMonth","setData","TacticalPage","range","addYears","handleSelectMonth","handleSelectYear","makeRequests","createData","manha","tarde","noite","total","quant_orders","quant_production","processProductions","getYear","push","horizontal","createMonthOprions","createYearOptions","Button","block","onClick","bsStyle","getTotalProduction","preco","barMix","Boolean","window","location","hostname","match","initialState","reducers","combineReducers","undefined","action","objectSpread","ReactDOM","render","react_default","createElement","es","store","createStore","BrowserRouter","Switch","Route","path","exact","component","Operational","Tatico","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0a32604.chunk.js","sourcesContent":["import { connect } from 'react-redux'\r\nimport {\r\n    fetchCostRawMaterial,\r\n    setCost,\r\n    setSelectedOrder,\r\n    setOptions,\r\n    setProductionOrders,\r\n    fetchProductionOrders,\r\n    createOptionsProductionOrder,\r\n    getStock,\r\n    setStock,\r\n} from '../../redux/actions/pages/operational'\r\n\r\nconst mapStateToProps = (state: any, own: any) => {\r\n\r\n    const props = {\r\n\r\n        cost_raw_material: state.operationalPage.cost_raw_material,\r\n        selected_order: state.operationalPage.selected_order,\r\n        options: state.operationalPage.options,\r\n        production_orders: state.operationalPage.production_orders,\r\n        stock: state.operationalPage.stock,\r\n    }\r\n\r\n    return props\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\r\n    return {\r\n\r\n        fetchCostRawMaterial: () => {\r\n\r\n            fetchCostRawMaterial()\r\n                .then((response) => dispatch(setCost(response)))\r\n                .catch((error) => dispatch(setCost(error)))\r\n        },\r\n\r\n        setSelectedOrder: (order: any) => {\r\n            dispatch(setSelectedOrder(order))\r\n        },\r\n\r\n        fetchOptions: () => {\r\n\r\n            fetchProductionOrders()\r\n                .then((response) => { dispatch(setOptions(createOptionsProductionOrder(response))); dispatch(setProductionOrders(response)) })\r\n                .catch((error) => { dispatch(setOptions(createOptionsProductionOrder(error))); dispatch(setProductionOrders(error)) })\r\n        },\r\n\r\n        getStock: () => {\r\n\r\n            getStock()\r\n            .then((response) => dispatch(setStock(response)))\r\n            .catch((error) => dispatch(setStock(error)))\r\n        },\r\n    }\r\n}\r\n\r\nexport default (componentClass: any) => connect(mapStateToProps, mapDispatchToProps)(componentClass)\r\n","import * as React from 'react'\r\n\r\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap'\r\n\r\nclass MyHeader extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Navbar>\r\n                <Navbar.Header>\r\n                    <Navbar.Brand>\r\n                        <a href=\"#brand\">Sistema de Produção</a>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                </Navbar.Header>\r\n                <Nav>\r\n                    <NavItem eventKey={1} href=\"/\">Operacional</NavItem>\r\n                    <NavItem eventKey={2} href=\"/tatico\">Tático</NavItem>\r\n                    <NavItem eventKey={2} href=\"/estrategico\">Estratégico</NavItem>\r\n                </Nav>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n<Link href={'/operacional'}>Operacional</Link>\r\n                        <Nav.link href={'/tatico'}>Tático</Nav.link>\r\n                        <Nav.link href={'/estrategico'}>Estratégico</Nav.link>\r\n*/\r\n\r\nexport default MyHeader","import * as React from 'react'\r\nimport { Navbar } from 'react-bootstrap'\r\n\r\nclass MyFooter extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <Navbar fixedBottom={true} color={'dark'}>\r\n                <Navbar.Brand href={'/home'}>Production System</Navbar.Brand>\r\n                <Navbar.Collapse>\r\n                    <Navbar.Text>\r\n                        Desenvolvido\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyFooter","import * as React from 'react'\r\nimport { Form, FormControl, FormGroup, Label } from 'react-bootstrap'\r\nimport { map } from 'lodash'\r\nimport { OptionInterface } from '../../interfaces/option'\r\n\r\ninterface PropTypes {\r\n\r\n    control_id: string\r\n    label: string\r\n    options: OptionInterface[]\r\n\r\n    // Functions\r\n    handleSelect: any\r\n}\r\n\r\nclass Select extends React.Component<PropTypes, any> {\r\n\r\n    constructor(props: PropTypes) {\r\n        super(props)\r\n\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n    }\r\n\r\n    handleSelect(value: any) {\r\n\r\n        this.props.handleSelect(value)\r\n    }\r\n\r\n    renderOptions() {\r\n\r\n        if (this.props.options) {\r\n\r\n            return map(this.props.options, (option: OptionInterface, index: number) => {\r\n\r\n                return (\r\n                    <option key={index} value={option.value}>{option.label}</option>\r\n                )\r\n            })\r\n        }\r\n\r\n        return []\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <FormGroup controlId={this.props.control_id}>\r\n                <Label>\r\n                    {this.props.label}\r\n                </Label>\r\n                <FormControl componentClass=\"select\" placeholder=\"select\" onChange={this.handleSelect}>\r\n                    <option value={0}>Selecione</option>\r\n                    {this.renderOptions()}\r\n                </FormControl>\r\n            </FormGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Select","import * as React from 'react'\r\n\r\nimport './style.css'\r\n\r\ninterface PropTypes {\r\n\r\n    header: string\r\n}\r\n\r\nclass Card extends React.Component<PropTypes, any> {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id={'container'} className={'container_card'}>\r\n                <div id={'content'} className={'content_card'}>\r\n                    <div id={'header'} className={'header_card'}>\r\n                        <h4>{this.props.header}</h4>\r\n                    </div>\r\n                    <div id={'body'} className={'body_card'}>\r\n                        { this.props.children }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card","import * as React from 'react'\r\n\r\nimport { map } from 'lodash'\r\n\r\nimport { BarChart, CartesianGrid, Legend, XAxis, YAxis, Tooltip, Bar, ReferenceLine } from 'recharts'\r\n\r\ninterface PropTypes {\r\n\r\n    width: number\r\n    heigth: number\r\n    data: any[]\r\n    xname: string\r\n    data_key: Array<{ key: string, color: string }>\r\n}\r\n\r\nclass MyBarChart extends React.Component<PropTypes, any> {\r\n\r\n    renderBars() {\r\n\r\n        if (this.props.data_key.length) {\r\n\r\n            return map(this.props.data_key, (data_key: { key: string, color: string }, index: number) => {\r\n\r\n                return (\r\n                    <Bar key={index} dataKey={data_key.key} fill={data_key.color} />\r\n                )\r\n            })\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <BarChart width={this.props.width} height={this.props.heigth} data={this.props.data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray='3 3' />\r\n                <XAxis dataKey={this.props.xname} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <ReferenceLine y={0} stroke='#000'/>\r\n                {this.renderBars()}\r\n            </BarChart>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyBarChart\r\n","\r\nconst Constants = {\r\n\r\n    URL: {\r\n        id: 'id',\r\n        idFuncionario: 'idFuncionario',\r\n        inicio: 'inicio',\r\n        fim: 'fim',\r\n        ano: 'ano',\r\n        mes: 'mes',\r\n        turno: 'turno',\r\n    },\r\n\r\n    RH: {\r\n        address: 'https://sigerh.azurewebsites.net',\r\n        routes: {\r\n            HorasTrabalhadas: '/api/HorasTrabalhadas',\r\n            Treinamentos: '/api/Treinamentos',\r\n            Values: '/api/Values',\r\n            Funcionarios: '/api/Funcionarios',\r\n        },\r\n    },\r\n    Production: {\r\n        address: 'https://sigepm.azurewebsites.net',\r\n        routes: {\r\n            getProducaoByUsuario: '/getProducaoByUsuario',\r\n            getProducaoByTurno: '/getProducaoByTurno',\r\n            getProducaoByAno: '/getProducaoByAno',\r\n            getProducaoByAnoMes: '/getProducaoByAnoMes',\r\n            getDescricaoProduto: '/getDescricaoProduto',\r\n            getAllProdutos: '/getAllProdutos',\r\n            getProdutoById: '/getProdutoById',\r\n            getQtdItemNegociado: '/getQtdItemNegociado',\r\n            getOrigemItem: '/getOrigemItem',\r\n            getAllItens: '/getAllItens',\r\n            getAllNotas: '/getAllNotas',\r\n            getNotasByUsuario: '/getNotasByUsuario',\r\n            getAllValoresNotas: '/getAllValoresNotas',\r\n            getNotasByTipoMovimentacao: '/getNotasByTipoMovimentacao',\r\n            getAllProducaoPorMesTurno: '/getAllProducaoPorMesTurno',\r\n            getEstoqueMP: '/getEstoqueMP',\r\n        },\r\n    },\r\n    Sales: {\r\n        address: 'https://sigemv.azurewebsites.net',\r\n        routes: {\r\n            EventosClasses: '/api/EventosClasses/',\r\n            Vendas: '/api/Vendas/',\r\n            Values: '/api/Values/',\r\n            Pedidos: '/api/Pedidos/',\r\n            PedidosPeriodo: '/PedidosPeriodo/',\r\n        },\r\n    },\r\n    Financial: {\r\n        address: 'http://trabalhosige.azurewebsites.net',\r\n        routes: {\r\n            Produto: '/api/Produto',\r\n            Registro_De_Venda: '/api/Registro_De_Venda',\r\n            Solicitacao_de_Compra: '/api/Solicitacao_de_Compra',\r\n            Setors: '/api/Setors',\r\n            GastosProducao: '/api/GastosProducao',\r\n            Conta_Pagar: '/api/Conta_Pagar',\r\n            CustoMateriaPrima: '/api/CustoMateriaPrima',\r\n            SuprimentoDeCaixa: '/api/SuprimentoDeCaixa',\r\n        },\r\n    },\r\n}\r\n\r\nexport default Constants\r\n","import axios from 'axios'\r\nimport { map } from 'lodash'\r\n\r\nimport { OptionInterface } from './../../../interfaces/option'\r\nimport { ProductionOrderInterface } from '../../../interfaces/production_order'\r\n\r\nimport Constants from '../../../utils/constants'\r\n\r\nexport const operationalActions = {\r\n\r\n    SET_COST: 'SET_COST',\r\n    SET_SELECTED_ORDER: 'SET_SELECTED_ORDER',\r\n    GET_PRODUCTIONS_ORDERS: 'GET_PRODUCTIONS_ORDERS',\r\n    SET_OPTIONS: 'SET_OPTIONS',\r\n    SET_PRODUCTION_ORDERS: 'SET_PRODUCTION_ORDERS',\r\n    SET_STOCK: 'SET_STOCK',\r\n}\r\n\r\nexport const fetchProductionOrders = async () => {\r\n\r\n    const orders: Promise<ProductionOrderInterface[]> = await axios.get(`${Constants.Sales.address}${Constants.Sales.routes.Pedidos}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => { console.log(error); return [] })\r\n\r\n    return orders\r\n}\r\n\r\nexport const getStock = () => {\r\n\r\n    const orders: Promise<number> = axios.get(`${Constants.Production.address}${Constants.Production.routes.getEstoqueMP}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => { console.log(error); return 0 })\r\n\r\n    return orders\r\n}\r\n\r\nexport const createOptionsProductionOrder = (options: ProductionOrderInterface[]): OptionInterface[] => {\r\n\r\n    return map(options, (option: ProductionOrderInterface) => {\r\n\r\n        const new_option: OptionInterface = {\r\n            label: option.IdPedido.toString(),\r\n            value: option.IdPedido,\r\n        }\r\n\r\n        return new_option\r\n    })\r\n}\r\n\r\nexport const setOptions = (options: OptionInterface[]) => ({\r\n    type: operationalActions.SET_OPTIONS,\r\n    payload: options,\r\n})\r\n\r\nexport const setProductionOrders = (orders: ProductionOrderInterface[]) => ({\r\n\r\n    type: operationalActions.SET_PRODUCTION_ORDERS,\r\n    payload: orders,\r\n})\r\n\r\nexport const fetchCostRawMaterial = () => {\r\n\r\n    const value: Promise<number> = axios.get(`${Constants.Financial.address}${Constants.Financial.routes.CustoMateriaPrima}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => { console.log(error); return 0 })\r\n\r\n    return value\r\n}\r\n\r\nexport const fetchEmployee = () => {\r\n\r\n}\r\n\r\nexport const setCost = (cost: number) => ({\r\n\r\n    type: operationalActions.SET_COST,\r\n    payload: cost,\r\n})\r\n\r\nexport const setSelectedOrder = (order: any) => ({\r\n\r\n    type: operationalActions.SET_SELECTED_ORDER,\r\n    payload: order,\r\n})\r\n\r\nexport const setStock = (stock: number) => ({\r\n\r\n    type: operationalActions.SET_STOCK,\r\n    payload: stock,\r\n})\r\n","// --strictNullChecks\r\n\r\nimport * as React from 'react'\r\n\r\nimport { find } from 'lodash'\r\nimport { Form, Modal, Label } from 'react-bootstrap'\r\n\r\nimport Header from '../../components/header'\r\nimport Footer from '../../components/footer'\r\nimport Select from '../../components/select'\r\nimport Card from '../../components/card/default'\r\nimport BarChart from '../../components/charts/bar'\r\n\r\nimport './style.css'\r\n\r\nimport { OptionInterface } from '../../interfaces/option'\r\nimport { ProductionOrderInterface } from '../../interfaces/production_order'\r\n\r\nimport { format } from 'date-fns'\r\n\r\nimport connect from './connect'\r\n\r\ninterface PropTypes {\r\n\r\n    cost_raw_material: number,\r\n    selected_order: ProductionOrderInterface,\r\n    options: OptionInterface[],\r\n    production_orders: ProductionOrderInterface[],\r\n    stock: number\r\n\r\n    // Functions\r\n    fetchCostRawMaterial: any,\r\n    setSelectedOrder: any,\r\n    fetchOptions: any,\r\n    getStock: any,\r\n}\r\n\r\nclass OperacionalPage extends React.Component<PropTypes, any> {\r\n\r\n    constructor(props: PropTypes) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: [],\r\n        }\r\n\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.fetchCostRawMaterial()\r\n        this.props.fetchOptions()\r\n        this.props.getStock()\r\n    }\r\n\r\n    handleSelect(event: any) {\r\n\r\n        if (this.props.production_orders.length) {\r\n\r\n            const production_order = find(this.props.production_orders, (prod: ProductionOrderInterface, index: number) => {\r\n\r\n                if (prod.IdPedido === Number(event.target.value)) {\r\n\r\n                    return prod\r\n                }\r\n            })\r\n\r\n            this.props.setSelectedOrder(production_order)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(next: PropTypes) {\r\n\r\n        if (next.stock && next.selected_order) {\r\n\r\n            this.setState({ data: [{ name: next.selected_order.IdPedido, estoque: next.stock, quantidade: next.selected_order.quantidade }] })\r\n        }\r\n    }\r\n\r\n    processQuant() {\r\n\r\n        if (!this.props.selected_order) { return [] }\r\n\r\n        console.log(this.props.stock)\r\n\r\n        return [{ name: this.props.selected_order.IdPedido, estoque: this.props.stock, quantidade: this.props.selected_order.quantidade }]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className={'container'}>\r\n                    <div>\r\n                        <div className={'form'}>\r\n                            <h3>Disponibilidade de recursos no estoque para produção</h3>\r\n                            <Form>\r\n                                <Select\r\n                                    label={'Ordem de produção'}\r\n                                    control_id={''}\r\n                                    handleSelect={this.handleSelect}\r\n                                    options={this.props.options}\r\n                                />\r\n                            </Form>\r\n                        </div>\r\n                        <div className={'chart'}>\r\n                            <div>\r\n                                <Card header={'Detalhes da Ordem de Produção'}>\r\n                                    <p>\r\n                                        <span>id: </span>\r\n                                        <span>{this.props.selected_order ? this.props.selected_order.IdPedido : ''}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span>quantidade: </span>\r\n                                        <span>{this.props.selected_order ? this.props.selected_order.quantidade : ''}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span>data: </span>\r\n                                        <span>{this.props.selected_order ? format(new Date(this.props.selected_order.dataPedido), 'dd/MM/yyyy') : ''}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span>cliente: </span>\r\n                                        <span>{this.props.selected_order ? this.props.selected_order.cliente : ''}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span>Custo de produção: </span>\r\n                                        <span>{this.props.fetchCostRawMaterial && this.props.selected_order ?\r\n                                            Math.abs(this.props.selected_order.quantidade * this.props.cost_raw_material).toFixed(2)\r\n                                            : ''}\r\n                                        </span>\r\n                                    </p>\r\n                                </Card>\r\n                            </div>\r\n                            <BarChart\r\n                                width={500}\r\n                                heigth={500}\r\n                                xname={'quant'}\r\n                                data_key={[{\r\n                                    key: 'estoque', color: 'blue',\r\n                                }, { key: 'quantidade', color: 'red' }]}\r\n                                data={this.state.data}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(OperacionalPage)\r\n","import { ProductInterface } from './../../../interfaces/product'\r\nimport { WorkedHours, EmployerInterface } from './../../../interfaces/employer'\r\nimport axios from 'axios'\r\nimport { startOfMonth, endOfMonth, format } from 'date-fns'\r\n\r\nimport { map, forEach, compact } from 'lodash'\r\n\r\nimport { ProductionOrderInterface } from '../../../interfaces/production_order'\r\n\r\nimport Constants from '../../../utils/constants'\r\nimport { ProductionInterface } from '../../../interfaces/production'\r\n\r\nexport const Months: string[] = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']\r\n\r\nexport const tacticalActions = {\r\n    SET_MONTH: 'SET_MONTH',\r\n    SET_YEAR: 'SET_YEAR',\r\n    SET_COST: 'SET_COST',\r\n    SET_PRODUCTION: 'SET_PRODUCTION',\r\n    SET_PRODUCTION_ORDERS: 'SET_PRODUCTION_ORDERS',\r\n    SET_HOURS: 'SET_HOURS',\r\n    SET_DATA: 'SET_DATA',\r\n    SET_PRODUCT: 'SET_PRODUCT',\r\n}\r\n\r\nexport const setData = (data: any) => ({\r\n\r\n    type: tacticalActions.SET_DATA,\r\n    payload: data,\r\n})\r\n\r\nexport const setMonth = (month: number) => ({\r\n\r\n    type: tacticalActions.SET_MONTH,\r\n    payload: month,\r\n})\r\n\r\nexport const setYear = (year: number) => ({\r\n\r\n    type: tacticalActions.SET_YEAR,\r\n    payload: year,\r\n})\r\n\r\nexport const setCost = (cost: number) => ({\r\n\r\n    type: tacticalActions.SET_COST,\r\n    payload: cost,\r\n})\r\n\r\nexport const setProduction = (production: ProductionInterface[]) => ({\r\n    type: tacticalActions.SET_PRODUCTION,\r\n    payload: production,\r\n})\r\n\r\nexport const setProductionOrders = (orders: ProductionOrderInterface[]) => ({\r\n\r\n    type: tacticalActions.SET_PRODUCTION_ORDERS,\r\n    payload: orders,\r\n})\r\n\r\nexport const setTotalHours = (hours: number) => ({\r\n\r\n    type: tacticalActions.SET_HOURS,\r\n    payload: hours,\r\n})\r\n\r\nexport const setProduct = (product: ProductInterface) => ({\r\n\r\n    type: tacticalActions.SET_PRODUCT,\r\n    payload: product,\r\n})\r\n\r\nexport const fetchCostRawMaterial = () => {\r\n\r\n    const value: Promise<number> =\r\n        axios.get(`${Constants.Financial.address}${Constants.Financial.routes.CustoMateriaPrima}`)\r\n            .then((response) => response.data)\r\n            .catch((error) => { console.log(error); return 0 })\r\n\r\n    return value\r\n}\r\n\r\nexport const fetchProduct = () => {\r\n\r\n    const value: Promise<ProductInterface> =\r\n        axios.get(`${Constants.Financial.address}${Constants.Financial.routes.Produto}/2`)\r\n            .then((response) => response.data)\r\n            .catch((error) => { console.log(error); return 0 })\r\n\r\n    return value\r\n}\r\n\r\nexport const fetchProdOrders = (month: number, year: number) => {\r\n\r\n    const start = format(startOfMonth(new Date(year, month, 1)), 'yyyy-MM-dd')\r\n    const end = format(endOfMonth(new Date(year, month, 1)), 'yyyy-MM-dd')\r\n\r\n    const value: Promise<ProductionOrderInterface[]> =\r\n        axios.get(`${Constants.Sales.address}${Constants.Sales.routes.PedidosPeriodo}${start}/${end}`)\r\n            .then((response) => response.data)\r\n            .catch((error) => { console.log(error); return [] })\r\n\r\n    return value\r\n}\r\n\r\nexport const fetchProduction = async (month: number, year: number) => {\r\n\r\n    const { Production, URL } = Constants\r\n\r\n    const value: ProductionInterface[] = await axios.get(`${Production.address}${Production.routes.getAllProducaoPorMesTurno}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n        },\r\n    })\r\n        .then((response) => response.data)\r\n        .catch((error) => { console.log(error); return [] })\r\n\r\n    return processProductionByMonth(month, value)\r\n}\r\n\r\nexport const fetchHoursMonth = async (month: number) => {\r\n\r\n    const retorno: WorkedHours[] = await axios.get(\r\n        `${Constants.RH.address}${Constants.RH.routes.HorasTrabalhadas}/${Constants.URL.mes}/${(month + 1)}`)\r\n        .then((response) => response.data)\r\n        .catch((error) => { console.log(error); return [] })\r\n\r\n    return processWokedHours(retorno)\r\n}\r\n\r\nexport const fetchEmployers = async (turno: string) => {\r\n\r\n    const retorno: EmployerInterface[] = await axios.get(\r\n        `${Constants.RH.address}${Constants.RH.routes.Funcionarios}/${Constants.URL.turno}=${turno}`)\r\n        .then((response) => response.data)\r\n        .catch((error) => { console.log(error); return [] })\r\n\r\n    return retorno\r\n}\r\n\r\nexport const getMonthName = (value: number): string => {\r\n\r\n    let result: string = ''\r\n\r\n    forEach(Months, (month: string, index: number) => {\r\n\r\n        if (index === value) {\r\n\r\n            result = month\r\n            return false\r\n        }\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nexport const processWokedHours = (worked: WorkedHours[]) => {\r\n\r\n    let quant: number = 0\r\n\r\n    forEach(worked, (work: WorkedHours, index: number) => {\r\n\r\n        quant += Number(work.HorasTrabalhadasNoMes)\r\n    })\r\n\r\n    return quant\r\n}\r\n\r\nexport const processProductionsOrders = (production_orders: ProductionOrderInterface[]) => {\r\n\r\n    let quant_total: number = 0\r\n\r\n    forEach(production_orders, (order: ProductionOrderInterface, index: number) => {\r\n\r\n        quant_total += order.quantidade\r\n    })\r\n\r\n    return quant_total\r\n}\r\n\r\nexport const processProductionByMonth = (month: number, productions: ProductionInterface[]): ProductionInterface[] => {\r\n\r\n    const month_name: string = getMonthName(month)\r\n\r\n    const all: ProductionInterface[] = map(productions, (production: ProductionInterface, index: number) => {\r\n\r\n        if (production.mes === month_name) {\r\n\r\n            return production\r\n        }\r\n    })\r\n\r\n    return compact(all)\r\n}\r\n","import * as React from 'react'\r\n\r\nimport { map } from 'lodash'\r\n\r\nimport { BarChart, CartesianGrid, Legend, XAxis, YAxis, Tooltip, Bar } from 'recharts'\r\n\r\ninterface PropTypes {\r\n\r\n    width: number\r\n    heigth: number\r\n    data: any[]\r\n    xname: string\r\n    data_key: { key: string, color: string, stackId: string | null }[]\r\n}\r\n\r\nclass MyBarChart extends React.Component<PropTypes, any> {\r\n\r\n\r\n    renderBars() {\r\n\r\n        if (this.props.data_key.length) {\r\n\r\n            return map(this.props.data_key, (data_key: { key: string, color: string, stackId: string }, index: number) => {\r\n\r\n                return (\r\n                    <Bar key={index} stackId={data_key.stackId} dataKey={data_key.key} fill={data_key.color} />\r\n                )\r\n            })\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <BarChart\r\n                width={this.props.width}\r\n                height={this.props.heigth}\r\n                data={this.props.data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n            >\r\n                <XAxis dataKey={this.props.xname} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n\r\n                {this.renderBars()}\r\n            </BarChart>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyBarChart\r\n","import { connect } from 'react-redux'\r\n\r\nimport {\r\n    setCost,\r\n    setMonth,\r\n    setYear,\r\n    setProduction,\r\n    setProductionOrders,\r\n    fetchCostRawMaterial,\r\n    fetchProdOrders,\r\n    fetchProduction,\r\n    fetchHoursMonth,\r\n    setData,\r\n    fetchProduct,\r\n    setProduct,\r\n    setTotalHours,\r\n\r\n} from '../../redux/actions/pages/tactical'\r\n\r\nconst mapStateToPros = (state: any) => {\r\n\r\n    const props = {\r\n\r\n        cost_raw_material: state.tacticalPage.cost_raw_material,\r\n        month: state.tacticalPage.month,\r\n        year: state.tacticalPage.year,\r\n        productions: state.tacticalPage.productions,\r\n        production_orders: state.tacticalPage.production_orders,\r\n        data: state.tacticalPage.data,\r\n        worked_hours: state.tacticalPage.worked_hours,\r\n        product: state.tacticalPage.product,\r\n    }\r\n\r\n    return props\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\r\n    return {\r\n\r\n        fetchCostRawMaterial: () => {\r\n\r\n            fetchCostRawMaterial()\r\n            .then((response) => dispatch(setCost(response)))\r\n            .catch((error) => dispatch(setCost(error)))\r\n        },\r\n\r\n        fetchProdOrders: (month: number, year: number) => {\r\n\r\n            fetchProdOrders(month, year)\r\n            .then((response) => dispatch(setProductionOrders(response)))\r\n            .catch((error) => dispatch(setProductionOrders(error)))\r\n        },\r\n\r\n        fetchProduction: (month: number, year: number) => {\r\n\r\n            fetchProduction(month, year)\r\n            .then((response) => dispatch(setProduction(response)))\r\n            .catch((error) => dispatch(setProduction(error)))\r\n        },\r\n\r\n        fetchHoursMonth: (month: number) => {\r\n\r\n            fetchHoursMonth(month)\r\n            .then((response) => dispatch(setTotalHours(response)))\r\n            .catch((error) => dispatch(setTotalHours(error)))\r\n        },\r\n\r\n        fetchProduct: () => {\r\n\r\n            fetchProduct()\r\n            .then((response) => dispatch(setProduct(response)))\r\n            .catch((error) => dispatch(setProduct(error)))\r\n        },\r\n\r\n        setYear: (year: number) => {\r\n            dispatch(setYear(year))\r\n        },\r\n\r\n        setMonth: (month: number) => {\r\n            dispatch(setMonth(month))\r\n        },\r\n\r\n        setData: (data: any) => {\r\n\r\n            dispatch(setData(data))\r\n        },\r\n    }\r\n}\r\n\r\nexport default (componentClass: any) => connect(mapStateToPros, mapDispatchToProps)(componentClass)\r\n","import * as React from 'react'\r\n\r\nimport { Form, Button, Col, ControlLabel } from 'react-bootstrap'\r\nimport { addYears, getYear, getMonth, startOfYear, endOfYear } from 'date-fns'\r\nimport { getMonthName, processProductionsOrders } from '../../redux/actions/pages/tactical'\r\nimport { forEach } from 'lodash'\r\n\r\nimport { OptionInterface } from '../../interfaces/option'\r\nimport { ProductionInterface } from '../../interfaces/production'\r\nimport { ProductionOrderInterface } from '../../interfaces/production_order'\r\n\r\nimport Header from '../../components/header'\r\nimport Footer from '../../components/footer'\r\nimport Select from '../../components/select'\r\nimport BarChart from '../../components/charts/barMix'\r\nimport Card from '../../components/card/default'\r\n\r\nimport connect from './connect'\r\nimport './style.css'\r\nimport { ProductInterface } from '../../interfaces/product'\r\n\r\ninterface PropTypes {\r\n\r\n    cost_raw_material: number,\r\n    month: number,\r\n    year: number,\r\n    productions: ProductionInterface[],\r\n    production_orders: ProductionOrderInterface[],\r\n    data: any,\r\n    worked_hours: number\r\n    product: ProductInterface\r\n    // Functions\r\n\r\n    fetchCostRawMaterial: any,\r\n    fetchProdOrders: any,\r\n    fetchProduction: any,\r\n    setYear: any,\r\n    setMonth: any,\r\n    setData: any,\r\n    fetchHoursMonth: any,\r\n    fetchProduct: any,\r\n}\r\n\r\nclass TacticalPage extends React.Component<PropTypes, any> {\r\n\r\n    constructor(props: PropTypes) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            range: { start: new Date(), end: addYears(new Date(), 2) },\r\n        }\r\n\r\n        this.handleSelectMonth = this.handleSelectMonth.bind(this)\r\n        this.handleSelectYear = this.handleSelectYear.bind(this)\r\n        this.makeRequests = this.makeRequests.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(next: PropTypes) {\r\n\r\n        if (this.props.production_orders !== next.production_orders || this.props.productions !== next.productions) {\r\n\r\n            this.createData(next.productions, next.production_orders)\r\n        }\r\n    }\r\n\r\n    processProductions(productions: ProductionInterface[]) {\r\n\r\n        let manha: number = 0\r\n        let tarde: number = 0\r\n        let noite: number = 0\r\n\r\n        forEach(productions, (production: ProductionInterface, index: number) => {\r\n\r\n            if (production.turno === 'Manhã') {\r\n\r\n                manha += production.quantidade\r\n            }\r\n            else if (production.turno === 'Tarde') {\r\n\r\n                tarde += production.quantidade\r\n            }\r\n            else if (production.turno === 'Noite') {\r\n\r\n                noite += production.quantidade\r\n            }\r\n        })\r\n\r\n        return {\r\n            manha,\r\n            tarde,\r\n            noite,\r\n        }\r\n    }\r\n\r\n    getTotalProduction(productions: ProductionInterface[]) {\r\n\r\n        let total: number = 0\r\n\r\n        forEach(productions, (production: ProductionInterface, index: number) => {\r\n\r\n            total += production.quantidade\r\n        })\r\n\r\n        return total\r\n    }\r\n\r\n    createData(productions: ProductionInterface[], orders: ProductionOrderInterface[]) {\r\n\r\n        const quant_orders: number = processProductionsOrders(orders)\r\n        const quant_production: { manha: number, tarde: number, noite: number } = this.processProductions(productions)\r\n\r\n        const data = [{ name: 'algo', manha: quant_production.manha, tarde: quant_production.tarde, noite: quant_production.noite, total: quant_orders }]\r\n\r\n        this.props.setData(data)\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.fetchCostRawMaterial()\r\n    }\r\n\r\n    createYearOptions() {\r\n\r\n        const range: Interval = this.state.range\r\n        const options: OptionInterface[] = []\r\n\r\n        for (let index = getYear(range.start); index <= getYear(range.end); index++) {\r\n\r\n            options.push({\r\n                label: index.toString(),\r\n                value: index,\r\n            })\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n    createMonthOprions() {\r\n\r\n        const options: OptionInterface[] = []\r\n\r\n        for (let index = 0; index <= 11; index++) {\r\n\r\n            options.push({\r\n                label: getMonthName(index),\r\n                value: index,\r\n            })\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n    handleSelectMonth(event: any) {\r\n\r\n        this.props.setMonth(Number(event.target.value))\r\n    }\r\n\r\n    handleSelectYear(event: any) {\r\n\r\n        this.props.setYear(Number(event.target.value))\r\n    }\r\n\r\n    makeRequests() {\r\n\r\n        this.props.fetchProdOrders(this.props.month, this.props.year)\r\n        this.props.fetchProduction(this.props.month, this.props.year)\r\n        this.props.fetchHoursMonth(this.props.month)\r\n        this.props.fetchProduct()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className={'container'}>\r\n                    <div>\r\n                        <div>\r\n                            <h3>Relação do que foi produzido para o que foi requerido em um turno</h3>\r\n                        </div>\r\n\r\n                        <div className={'content'}>\r\n                            <div className={'from_chart'}>\r\n                                <div className={'form'}>\r\n                                    <Form horizontal>\r\n                                        <Select\r\n                                            label={''}\r\n                                            control_id={'control_form'}\r\n                                            handleSelect={this.handleSelectMonth}\r\n                                            options={this.createMonthOprions()}\r\n                                        />\r\n                                        <Select\r\n                                            label={''}\r\n                                            control_id={'control_form'}\r\n                                            handleSelect={this.handleSelectYear}\r\n                                            options={this.createYearOptions()}\r\n                                        />\r\n                                        <Button block onClick={this.makeRequests} bsStyle='primary'>Pesquisar</Button>\r\n                                    </Form>\r\n                                </div>\r\n                                <Card header={'Detalhes'}>\r\n                                    <p>\r\n                                        <span>Horas trabalhadas no mês: </span>\r\n                                        <span>{this.props.worked_hours ? this.props.worked_hours : ''}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span>Custo de produção: </span>\r\n                                        <span>{this.props.fetchCostRawMaterial && this.props.productions ?\r\n                                            Math.abs(this.getTotalProduction(this.props.productions) * this.props.cost_raw_material).toFixed(2)\r\n                                            : ''}\r\n                                        </span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span>Custo de produção estimado: </span>\r\n                                        <span>{this.props.fetchCostRawMaterial && this.props.production_orders ?\r\n                                            Math.abs(processProductionsOrders(this.props.production_orders) * this.props.cost_raw_material).toFixed(2)\r\n                                            : ''}\r\n                                        </span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span>Valor de produção: </span>\r\n                                        <span>{this.props.fetchCostRawMaterial && this.props.productions ?\r\n                                            Math.abs(this.getTotalProduction(this.props.productions) * this.props.product.preco).toFixed(2)\r\n                                            : ''}\r\n                                        </span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span>Valor de produção estimado: </span>\r\n                                        <span>{this.props.fetchCostRawMaterial && this.props.production_orders ?\r\n                                            Math.abs(processProductionsOrders(this.props.production_orders) * this.props.product.preco).toFixed(2)\r\n                                            : ''}\r\n                                        </span>\r\n                                    </p>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'chart'}>\r\n                        <BarChart\r\n                            width={500}\r\n                            heigth={500}\r\n                            xname={'Produção por turno'}\r\n                            data_key={[\r\n                                { key: 'manha', color: 'blue', stackId: 'a' },\r\n                                { key: 'tarde', color: 'red', stackId: 'a' },\r\n                                { key: 'noite', color: 'green', stackId: 'a' },\r\n                                { key: 'total', color: '#400080', stackId: null },\r\n                            ]}\r\n                            data={this.props.data}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(TacticalPage)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { operationalActions } from '../../actions/pages/operational'\r\n\r\nconst initialState = {}\r\nexport default (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case operationalActions.SET_COST:\r\n            return { ...state, cost_raw_material: action.payload }\r\n\r\n        case operationalActions.SET_STOCK:\r\n            return { ...state, stock: action.payload }\r\n\r\n        case operationalActions.SET_SELECTED_ORDER:\r\n            return { ...state, selected_order: action.payload }\r\n\r\n        case operationalActions.SET_OPTIONS:\r\n            return { ...state, options: action.payload }\r\n\r\n        case operationalActions.SET_PRODUCTION_ORDERS:\r\n            return { ...state, production_orders: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { tacticalActions } from '../../actions/pages/tactical'\r\n\r\nconst initialState = {}\r\nexport default (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case tacticalActions.SET_COST:\r\n            return { ...state, cost_raw_material: action.payload }\r\n\r\n        case tacticalActions.SET_DATA:\r\n            return { ...state, data: action.payload }\r\n\r\n        case tacticalActions.SET_MONTH:\r\n            return { ...state, month: action.payload }\r\n\r\n        case tacticalActions.SET_YEAR:\r\n            return { ...state, year: action.payload }\r\n\r\n        case tacticalActions.SET_PRODUCT:\r\n            return { ...state, product: action.payload }\r\n\r\n        case tacticalActions.SET_HOURS:\r\n            return { ...state, worked_hours: action.payload }\r\n\r\n        case tacticalActions.SET_PRODUCTION:\r\n            return { ...state, productions: action.payload }\r\n\r\n        case tacticalActions.SET_PRODUCTION_ORDERS:\r\n            return { ...state, production_orders: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport operationalPage from './pages/operational'\r\nimport tacticalPage from './pages/tactical'\r\n\r\nconst reducers = combineReducers({\r\n\r\n    operationalPage,\r\n    tacticalPage,\r\n})\r\n\r\nexport default reducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Operational from './pages/operacional'\nimport Tatico from './pages/tactical'\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter, Switch, Route  } from 'react-router-dom'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport reducers from './redux/reducers/index'\n\nReactDOM.render(<Provider store={createStore(reducers)}>\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact component={Operational} />\n            <Route path=\"/tatico\" component={Tatico} />\n        </Switch>\n    </BrowserRouter>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}