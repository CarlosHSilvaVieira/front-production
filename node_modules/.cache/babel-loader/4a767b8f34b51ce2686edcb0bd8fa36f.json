{"ast":null,"code":"var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: translate,\n    other: translate\n  },\n  xSeconds: {\n    one: translate,\n    other: translate\n  },\n  halfAMinute: 'fél perce',\n  lessThanXMinutes: {\n    one: translate,\n    other: translate\n  },\n  xMinutes: {\n    one: translate,\n    other: translate\n  },\n  aboutXHours: {\n    one: translate,\n    other: translate\n  },\n  xHours: {\n    one: translate,\n    other: translate\n  },\n  xDays: {\n    one: translate,\n    other: translate\n  },\n  aboutXMonths: {\n    one: translate,\n    other: translate\n  },\n  xMonths: {\n    one: translate,\n    other: translate\n  },\n  aboutXYears: {\n    one: translate,\n    other: translate\n  },\n  xYears: {\n    one: translate,\n    other: translate\n  },\n  overXYears: {\n    one: translate,\n    other: translate\n  },\n  almostXYears: {\n    one: translate,\n    other: translate\n  }\n};\nvar translations = {\n  'about': 'körülbelül',\n  'over': 'több mint',\n  'almost': 'majdnem',\n  'lessthan': 'kevesebb, mint'\n};\n\nfunction translate(number, addSuffix, key, isFuture) {\n  var num = number;\n\n  switch (key) {\n    case 'xseconds_one':\n      return isFuture || !addSuffix ? 'néhány másodperc' : 'néhány másodperce';\n\n    case 'xseconds_other':\n      return num + (isFuture || !addSuffix ? ' másodperc' : ' másodperce');\n\n    case 'xminutes_one':\n      return 'egy' + (isFuture || !addSuffix ? ' perc' : ' perce');\n\n    case 'xminutes_other':\n      return num + (isFuture || !addSuffix ? ' perc' : ' perce');\n\n    case 'xhours_one':\n      return 'egy' + (isFuture || !addSuffix ? ' óra' : ' órája');\n\n    case 'xhours_other':\n      return num + (isFuture || !addSuffix ? ' óra' : ' órája');\n\n    case 'xdays_one':\n      return 'egy' + (isFuture || !addSuffix ? ' nap' : ' napja');\n\n    case 'xdays_other':\n      return num + (isFuture || !addSuffix ? ' nap' : ' napja');\n\n    case 'xmonths_one':\n      return 'egy' + (isFuture || !addSuffix ? ' hónap' : ' hónapja');\n\n    case 'xmonths_other':\n      return num + (isFuture || !addSuffix ? ' hónap' : ' hónapja');\n\n    case 'xyears_one':\n      return 'egy' + (isFuture || !addSuffix ? ' év' : ' éve');\n\n    case 'xyears_other':\n      return num + (isFuture || !addSuffix ? ' év' : ' éve');\n  }\n\n  return '';\n}\n\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var adverb = token.match(/about|over|almost|lessthan/i);\n  var unit = token.replace(adverb, '');\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one(count, options.addSuffix, unit.toLowerCase() + '_one', options.comparison > 0);\n  } else {\n    result = formatDistanceLocale[token].other(count, options.addSuffix, unit.toLowerCase() + '_other', options.comparison > 0);\n  }\n\n  if (adverb) {\n    result = translations[adverb[0].toLowerCase()] + ' ' + result;\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return result + ' múlva';\n    } else {\n      return result + ' ezelőtt';\n    }\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}