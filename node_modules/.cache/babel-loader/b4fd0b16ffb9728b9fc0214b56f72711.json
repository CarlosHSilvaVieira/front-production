{"ast":null,"code":"import { connect } from 'react-redux';\nimport { setCost, setMonth as _setMonth, setYear as _setYear, setProduction, setProductionOrders, fetchCostRawMaterial as _fetchCostRawMaterial, fetchProdOrders as _fetchProdOrders, fetchProduction as _fetchProduction, setData as _setData, processProductionByMonth } from '../../redux/actions/pages/tactical';\n\nvar mapStateToPros = function mapStateToPros(state) {\n  var props = {\n    cost_raw_material: state.tacticalPage.cost_raw_material,\n    month: state.tacticalPage.month,\n    year: state.tacticalPage.year,\n    productions: state.tacticalPage.productions,\n    production_orders: state.tacticalPage.production_orders,\n    data: state.tacticalPage.data\n  };\n  return props;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchCostRawMaterial: function fetchCostRawMaterial() {\n      _fetchCostRawMaterial().then(function (response) {\n        return dispatch(setCost(response));\n      }).catch(function (error) {\n        return dispatch(setCost(error));\n      });\n    },\n    fetchProdOrders: function fetchProdOrders(month, year) {\n      _fetchProdOrders(month, year).then(function (response) {\n        return dispatch(setProductionOrders(response));\n      }).catch(function (error) {\n        return dispatch(setProductionOrders(error));\n      });\n    },\n    fetchProduction: function fetchProduction(month, year) {\n      _fetchProduction(month, year).then(function (response) {\n        return dispatch(setProduction(processProductionByMonth(response)));\n      }).catch(function (error) {\n        return dispatch(setProduction(error));\n      });\n    },\n    setYear: function setYear(year) {\n      dispatch(_setYear(year));\n    },\n    setMonth: function setMonth(month) {\n      dispatch(_setMonth(month));\n    },\n    setData: function setData(data) {\n      dispatch(_setData(data));\n    }\n  };\n};\n\nexport default (function (componentClass) {\n  return connect(mapStateToPros, mapDispatchToProps)(componentClass);\n});","map":{"version":3,"sources":["D:\\Documents\\React\\my-front-production\\src\\pages\\tactical\\connect.ts"],"names":["connect","setCost","setMonth","setYear","setProduction","setProductionOrders","fetchCostRawMaterial","fetchProdOrders","fetchProduction","setData","processProductionByMonth","mapStateToPros","state","props","cost_raw_material","tacticalPage","month","year","productions","production_orders","data","mapDispatchToProps","dispatch","then","response","catch","error","componentClass"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SACIC,OADJ,EAEIC,QAAQ,IAARA,SAFJ,EAGIC,OAAO,IAAPA,QAHJ,EAIIC,aAJJ,EAKIC,mBALJ,EAMIC,oBAAoB,IAApBA,qBANJ,EAOIC,eAAe,IAAfA,gBAPJ,EAQIC,eAAe,IAAfA,gBARJ,EASIC,OAAO,IAAPA,QATJ,EAUIC,wBAVJ,QAWO,oCAXP;;AAaA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAgB;AAEnC,MAAMC,KAAK,GAAG;AAEVC,IAAAA,iBAAiB,EAAEF,KAAK,CAACG,YAAN,CAAmBD,iBAF5B;AAGVE,IAAAA,KAAK,EAAEJ,KAAK,CAACG,YAAN,CAAmBC,KAHhB;AAIVC,IAAAA,IAAI,EAAEL,KAAK,CAACG,YAAN,CAAmBE,IAJf;AAKVC,IAAAA,WAAW,EAAEN,KAAK,CAACG,YAAN,CAAmBG,WALtB;AAMVC,IAAAA,iBAAiB,EAAEP,KAAK,CAACG,YAAN,CAAmBI,iBAN5B;AAOVC,IAAAA,IAAI,EAAER,KAAK,CAACG,YAAN,CAAmBK;AAPf,GAAd;AAUA,SAAOP,KAAP;AACH,CAbD;;AAeA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAmB;AAE1C,SAAO;AAEHhB,IAAAA,oBAAoB,EAAE,gCAAM;AAExBA,MAAAA,qBAAoB,GACnBiB,IADD,CACM,UAACC,QAAD;AAAA,eAAcF,QAAQ,CAACrB,OAAO,CAACuB,QAAD,CAAR,CAAtB;AAAA,OADN,EAECC,KAFD,CAEO,UAACC,KAAD;AAAA,eAAWJ,QAAQ,CAACrB,OAAO,CAACyB,KAAD,CAAR,CAAnB;AAAA,OAFP;AAGH,KAPE;AASHnB,IAAAA,eAAe,EAAE,yBAACS,KAAD,EAAgBC,IAAhB,EAAiC;AAE9CV,MAAAA,gBAAe,CAACS,KAAD,EAAQC,IAAR,CAAf,CACCM,IADD,CACM,UAACC,QAAD;AAAA,eAAcF,QAAQ,CAACjB,mBAAmB,CAACmB,QAAD,CAApB,CAAtB;AAAA,OADN,EAECC,KAFD,CAEO,UAACC,KAAD;AAAA,eAAWJ,QAAQ,CAACjB,mBAAmB,CAACqB,KAAD,CAApB,CAAnB;AAAA,OAFP;AAGH,KAdE;AAgBHlB,IAAAA,eAAe,EAAE,yBAACQ,KAAD,EAAgBC,IAAhB,EAAiC;AAE9CT,MAAAA,gBAAe,CAACQ,KAAD,EAAQC,IAAR,CAAf,CACCM,IADD,CACM,UAACC,QAAD;AAAA,eAAcF,QAAQ,CAAClB,aAAa,CAACM,wBAAwB,CAACc,QAAD,CAAzB,CAAd,CAAtB;AAAA,OADN,EAECC,KAFD,CAEO,UAACC,KAAD;AAAA,eAAWJ,QAAQ,CAAClB,aAAa,CAACsB,KAAD,CAAd,CAAnB;AAAA,OAFP;AAGH,KArBE;AAuBHvB,IAAAA,OAAO,EAAE,iBAACc,IAAD,EAAkB;AACvBK,MAAAA,QAAQ,CAACnB,QAAO,CAACc,IAAD,CAAR,CAAR;AACH,KAzBE;AA2BHf,IAAAA,QAAQ,EAAE,kBAACc,KAAD,EAAmB;AACzBM,MAAAA,QAAQ,CAACpB,SAAQ,CAACc,KAAD,CAAT,CAAR;AACH,KA7BE;AA+BHP,IAAAA,OAAO,EAAE,iBAACW,IAAD,EAAe;AAEpBE,MAAAA,QAAQ,CAACb,QAAO,CAACW,IAAD,CAAR,CAAR;AACH;AAlCE,GAAP;AAoCH,CAtCD;;AAwCA,gBAAe,UAACO,cAAD;AAAA,SAAyB3B,OAAO,CAACW,cAAD,EAAiBU,kBAAjB,CAAP,CAA4CM,cAA5C,CAAzB;AAAA,CAAf","sourcesContent":["import { connect } from 'react-redux'\r\n\r\nimport {\r\n    setCost,\r\n    setMonth,\r\n    setYear,\r\n    setProduction,\r\n    setProductionOrders,\r\n    fetchCostRawMaterial,\r\n    fetchProdOrders,\r\n    fetchProduction,\r\n    setData,\r\n    processProductionByMonth\r\n} from '../../redux/actions/pages/tactical'\r\n\r\nconst mapStateToPros = (state: any) => {\r\n\r\n    const props = {\r\n\r\n        cost_raw_material: state.tacticalPage.cost_raw_material,\r\n        month: state.tacticalPage.month,\r\n        year: state.tacticalPage.year,\r\n        productions: state.tacticalPage.productions,\r\n        production_orders: state.tacticalPage.production_orders,\r\n        data: state.tacticalPage.data,\r\n    }\r\n\r\n    return props\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\r\n    return {\r\n\r\n        fetchCostRawMaterial: () => {\r\n\r\n            fetchCostRawMaterial()\r\n            .then((response) => dispatch(setCost(response)))\r\n            .catch((error) => dispatch(setCost(error)))\r\n        },\r\n\r\n        fetchProdOrders: (month: number, year: number) => {\r\n\r\n            fetchProdOrders(month, year)\r\n            .then((response) => dispatch(setProductionOrders(response)))\r\n            .catch((error) => dispatch(setProductionOrders(error)))\r\n        },\r\n\r\n        fetchProduction: (month: number, year: number) => {\r\n\r\n            fetchProduction(month, year)\r\n            .then((response) => dispatch(setProduction(processProductionByMonth(response))))\r\n            .catch((error) => dispatch(setProduction(error)))\r\n        },\r\n\r\n        setYear: (year: number) => {\r\n            dispatch(setYear(year))\r\n        },\r\n\r\n        setMonth: (month: number) => {\r\n            dispatch(setMonth(month))\r\n        },\r\n\r\n        setData: (data: any) => {\r\n\r\n            dispatch(setData(data))\r\n        }\r\n    }\r\n}\r\n\r\nexport default (componentClass: any) => connect(mapStateToPros, mapDispatchToProps)(componentClass)"]},"metadata":{},"sourceType":"module"}