{"ast":null,"code":"import axios from 'axios';\nimport { map } from 'lodash';\nimport Constants from '../../../utils/constants';\nexport var selectActions = {\n  GET_PRODUCTIONS_ORDERS: 'GET_PRODUCTIONS_ORDERS',\n  SET_OPTIONS: 'SET_OPTIONS'\n};\nexport var fetchProductionOrders = function fetchProductionOrders() {\n  var orders = axios.get(\"\".concat(Constants.Sales_API.address).concat(Constants.Sales_API.routes.Pedidos)).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.log(error);\n    return null;\n  });\n  return orders;\n};\nexport var createOptionsProductionOrder = function createOptionsProductionOrder(options) {\n  return map(options, function (option) {\n    var new_option = {\n      label: option.id.toString(),\n      value: option\n    };\n    return new_option;\n  });\n};\nexport var setOptions = function setOptions(options) {\n  return {\n    type: selectActions.SET_OPTIONS,\n    payload: options\n  };\n};","map":{"version":3,"sources":["D:\\Documents\\React\\my-front-production\\src\\redux\\actions\\components\\select.ts"],"names":["axios","map","Constants","selectActions","GET_PRODUCTIONS_ORDERS","SET_OPTIONS","fetchProductionOrders","orders","get","Sales_API","address","routes","Pedidos","then","response","data","catch","error","console","log","createOptionsProductionOrder","options","option","new_option","label","id","toString","value","setOptions","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,GAAT,QAAoB,QAApB;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAO,IAAMC,aAAa,GAAG;AACzBC,EAAAA,sBAAsB,EAAE,wBADC;AAEzBC,EAAAA,WAAW,EAAE;AAFY,CAAtB;AAKP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAEvC,MAAMC,MAA2C,GAAGP,KAAK,CAACQ,GAAN,WAAaN,SAAS,CAACO,SAAV,CAAoBC,OAAjC,SAA2CR,SAAS,CAACO,SAAV,CAAoBE,MAApB,CAA2BC,OAAtE,GACnDC,IADmD,CAC9C,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAvB;AAAA,GAD8C,EAEnDC,KAFmD,CAE7C,UAACC,KAAD,EAAW;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAoB,WAAO,IAAP;AAAa,GAFD,CAApD;AAIA,SAAOV,MAAP;AACH,CAPM;AASP,OAAO,IAAMa,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,OAAD,EAAsF;AAE9H,SAAOpB,GAAG,CAACoB,OAAD,EAAU,UAACC,MAAD,EAAsC;AAEtD,QAAMC,UAAqD,GAAG;AAC1DC,MAAAA,KAAK,EAAEF,MAAM,CAACG,EAAP,CAAUC,QAAV,EADmD;AAE1DC,MAAAA,KAAK,EAAEL;AAFmD,KAA9D;AAKA,WAAOC,UAAP;AACH,GARS,CAAV;AASH,CAXM;AAaP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACP,OAAD;AAAA,SAAsC;AAC5DQ,IAAAA,IAAI,EAAE1B,aAAa,CAACE,WADwC;AAE5DyB,IAAAA,OAAO,EAAET;AAFmD,GAAtC;AAAA,CAAnB","sourcesContent":["import axios from 'axios'\r\nimport { OptionInterface } from './../../../interfaces/option';\r\nimport { ProductionOrderInterface } from '../../../interfaces/production_order'\r\nimport { map } from 'lodash'\r\n\r\nimport Constants from '../../../utils/constants'\r\n\r\nexport const selectActions = {\r\n    GET_PRODUCTIONS_ORDERS: 'GET_PRODUCTIONS_ORDERS',\r\n    SET_OPTIONS: 'SET_OPTIONS',\r\n}\r\n\r\nexport const fetchProductionOrders = () => {\r\n\r\n    const orders: Promise<ProductionOrderInterface[]> = axios.get(`${Constants.Sales_API.address}${Constants.Sales_API.routes.Pedidos}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => { console.log(error); return null })\r\n\r\n    return orders\r\n}\r\n\r\nexport const createOptionsProductionOrder = (options: ProductionOrderInterface[]): OptionInterface<ProductionOrderInterface>[] => {\r\n\r\n    return map(options, (option: ProductionOrderInterface) => {\r\n\r\n        const new_option: OptionInterface<ProductionOrderInterface> = {\r\n            label: option.id.toString(),\r\n            value: option\r\n        }\r\n\r\n        return new_option\r\n    })\r\n}\r\n\r\nexport const setOptions = (options: OptionInterface<any>[]) => ({\r\n    type: selectActions.SET_OPTIONS,\r\n    payload: options\r\n})\r\n"]},"metadata":{},"sourceType":"module"}