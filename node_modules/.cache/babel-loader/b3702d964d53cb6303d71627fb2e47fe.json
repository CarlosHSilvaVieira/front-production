{"ast":null,"code":"import _classCallCheck from \"D:\\\\Documents\\\\React\\\\my-front-production\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Documents\\\\React\\\\my-front-production\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Documents\\\\React\\\\my-front-production\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Documents\\\\React\\\\my-front-production\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Documents\\\\React\\\\my-front-production\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Documents\\\\React\\\\my-front-production\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Documents\\\\React\\\\my-front-production\\\\src\\\\pages\\\\tactical\\\\index.tsx\";\nimport * as React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { addYears, getYear } from 'date-fns';\nimport { getMonthName, processProductionsOrders } from '../../redux/actions/pages/tactical';\nimport { forEach } from 'lodash';\nimport Header from '../../components/header';\nimport Footer from '../../components/footer';\nimport Select from '../../components/select';\nimport BarChart from '../../components/charts/barMix';\nimport connect from './connect';\nimport './style.css';\n\nvar TacticalPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TacticalPage, _React$Component);\n\n  function TacticalPage(props) {\n    var _this;\n\n    _classCallCheck(this, TacticalPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TacticalPage).call(this, props));\n    _this.state = {\n      range: {\n        start: new Date(),\n        end: addYears(new Date(), 2)\n      }\n    };\n    _this.handleSelectMonth = _this.handleSelectMonth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectYear = _this.handleSelectYear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.makeRequests = _this.makeRequests.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TacticalPage, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      if (this.props.production_orders !== next.production_orders || this.props.productions !== next.productions) {\n        this.createData(next.productions, next.production_orders);\n      }\n    }\n  }, {\n    key: \"processProductions\",\n    value: function processProductions(productions) {\n      var manha = 0;\n      var tarde = 0;\n      var noite = 0;\n      forEach(productions, function (production, index) {\n        if (production.turno === 'Manhã') {\n          manha += production.quantidade;\n        } else if (production.turno === 'Tarde') {\n          tarde += production.quantidade;\n        } else if (production.turno === 'Noite') {\n          noite += production.quantidade;\n        }\n      });\n      return {\n        manha: manha,\n        tarde: tarde,\n        noite: noite\n      };\n    }\n  }, {\n    key: \"createData\",\n    value: function createData(productions, orders) {\n      var quant_orders = processProductionsOrders(orders);\n      var quant_production = this.processProductions(productions);\n      var data = [{\n        name: 'algo',\n        manha: quant_production.manha,\n        tarde: quant_production.tarde,\n        noite: quant_production.noite,\n        total: quant_orders\n      }];\n      this.props.setData(data);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchCostRawMaterial();\n    }\n  }, {\n    key: \"createYearOptions\",\n    value: function createYearOptions() {\n      var range = this.state.range;\n      var options = [];\n\n      for (var index = getYear(range.start); index <= getYear(range.end); index++) {\n        options.push({\n          label: index.toString(),\n          value: index\n        });\n      }\n\n      return options;\n    }\n  }, {\n    key: \"createMonthOprions\",\n    value: function createMonthOprions() {\n      var options = [];\n\n      for (var index = 0; index <= 11; index++) {\n        options.push({\n          label: getMonthName(index),\n          value: index\n        });\n      }\n\n      return options;\n    }\n  }, {\n    key: \"handleSelectMonth\",\n    value: function handleSelectMonth(event) {\n      this.props.setMonth(event.target.value);\n    }\n  }, {\n    key: \"handleSelectYear\",\n    value: function handleSelectYear(event) {\n      this.props.setYear(event.target.value);\n    }\n  }, {\n    key: \"makeRequests\",\n    value: function makeRequests() {\n      this.props.fetchProdOrders(this.props.month, this.props.year);\n      this.props.fetchProduction(this.props.month, this.props.year);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: 'container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'form',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Rela\\xE7\\xE3o do que foi produzido para o que foi requerido em um turno\"), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Select, {\n        label: 'Mês',\n        control_id: 'control_form',\n        handleSelect: this.handleSelectMonth,\n        options: this.createMonthOprions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(Select, {\n        label: 'Ano',\n        control_id: 'control_form',\n        handleSelect: this.handleSelectYear,\n        options: this.createYearOptions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.makeRequests,\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Pesquisar\"))), React.createElement(\"div\", {\n        className: 'chart',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        width: 500,\n        heigth: 500,\n        xname: '',\n        data_key: [{\n          key: 'manha',\n          color: 'blue',\n          stackId: 'a'\n        }, {\n          key: 'tarde',\n          color: 'red',\n          stackId: 'a'\n        }, {\n          key: 'noite',\n          color: 'green',\n          stackId: 'a'\n        }, {\n          key: 'total',\n          color: 'yellow',\n          stackId: null\n        }],\n        data: this.props.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TacticalPage;\n}(React.Component);\n\nexport default connect(TacticalPage);","map":{"version":3,"sources":["D:\\Documents\\React\\my-front-production\\src\\pages\\tactical\\index.tsx"],"names":["React","Form","Button","addYears","getYear","getMonthName","processProductionsOrders","forEach","Header","Footer","Select","BarChart","connect","TacticalPage","props","state","range","start","Date","end","handleSelectMonth","bind","handleSelectYear","makeRequests","next","production_orders","productions","createData","manha","tarde","noite","production","index","turno","quantidade","orders","quant_orders","quant_production","processProductions","data","name","total","setData","fetchCostRawMaterial","options","push","label","toString","value","event","setMonth","target","setYear","fetchProdOrders","month","year","fetchProduction","createMonthOprions","createYearOptions","key","color","stackId","Component"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { addYears, getYear, getMonth, startOfYear, endOfYear } from 'date-fns'\r\nimport { getMonthName, processProductionsOrders } from '../../redux/actions/pages/tactical'\r\nimport { forEach } from 'lodash'\r\n\r\nimport { OptionInterface } from '../../interfaces/option'\r\nimport { ProductionInterface } from '../../interfaces/production'\r\nimport { ProductionOrderInterface } from '../../interfaces/production_order'\r\n\r\nimport Header from '../../components/header'\r\nimport Footer from '../../components/footer'\r\nimport Select from '../../components/select'\r\nimport BarChart from '../../components/charts/barMix'\r\n\r\nimport connect from './connect'\r\nimport './style.css'\r\n\r\ninterface PropTypes {\r\n\r\n    cost_raw_material: number,\r\n    month: number,\r\n    year: number,\r\n    productions: ProductionInterface[],\r\n    production_orders: ProductionOrderInterface[],\r\n    data: any,\r\n    // Functions\r\n\r\n    fetchCostRawMaterial: any,\r\n    fetchProdOrders: any,\r\n    fetchProduction: any,\r\n    setYear: any,\r\n    setMonth: any,\r\n    setData: any,\r\n}\r\n\r\nclass TacticalPage extends React.Component<PropTypes, any> {\r\n\r\n    constructor(props: PropTypes) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            range: { start: new Date(), end: addYears(new Date(), 2) },\r\n        }\r\n\r\n        this.handleSelectMonth = this.handleSelectMonth.bind(this)\r\n        this.handleSelectYear = this.handleSelectYear.bind(this)\r\n        this.makeRequests = this.makeRequests.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(next: PropTypes) {\r\n\r\n        if (this.props.production_orders !== next.production_orders || this.props.productions !== next.productions) {\r\n\r\n            this.createData(next.productions, next.production_orders)\r\n        }\r\n    }\r\n\r\n    processProductions(productions: ProductionInterface[]) {\r\n\r\n        let manha: number = 0\r\n        let tarde: number = 0\r\n        let noite: number = 0\r\n\r\n        forEach(productions, (production: ProductionInterface, index: number) => {\r\n\r\n            if (production.turno === 'Manhã') {\r\n\r\n                manha += production.quantidade\r\n            }\r\n            else if (production.turno === 'Tarde') {\r\n\r\n                tarde += production.quantidade\r\n            }\r\n            else if (production.turno === 'Noite') {\r\n\r\n                noite += production.quantidade\r\n            }\r\n        })\r\n\r\n        return {\r\n            manha,\r\n            tarde,\r\n            noite,\r\n        }\r\n    }\r\n\r\n    createData(productions: ProductionInterface[], orders: ProductionOrderInterface[]) {\r\n\r\n        const quant_orders: number = processProductionsOrders(orders)\r\n        const quant_production: { manha: number, tarde: number, noite: number } = this.processProductions(productions)\r\n\r\n        const data = [{ name: 'algo', manha: quant_production.manha, tarde: quant_production.tarde, noite: quant_production.noite, total: quant_orders }]\r\n\r\n        this.props.setData(data)\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.fetchCostRawMaterial()\r\n    }\r\n\r\n    createYearOptions() {\r\n\r\n        const range: Interval = this.state.range\r\n        const options: OptionInterface[] = []\r\n\r\n        for (let index = getYear(range.start); index <= getYear(range.end); index++) {\r\n\r\n            options.push({\r\n                label: index.toString(),\r\n                value: index,\r\n            })\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n    createMonthOprions() {\r\n\r\n        const options: OptionInterface[] = []\r\n\r\n        for (let index = 0; index <= 11; index++) {\r\n\r\n            options.push({\r\n                label: getMonthName(index),\r\n                value: index,\r\n            })\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n    handleSelectMonth(event: any) {\r\n\r\n        this.props.setMonth(event.target.value)\r\n    }\r\n\r\n    handleSelectYear(event: any) {\r\n\r\n        this.props.setYear(event.target.value)\r\n    }\r\n\r\n    makeRequests() {\r\n\r\n        this.props.fetchProdOrders(this.props.month, this.props.year)\r\n        this.props.fetchProduction(this.props.month, this.props.year)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className={'container'}>\r\n                    <div>\r\n                        <div className={'form'}>\r\n                            <h3>Relação do que foi produzido para o que foi requerido em um turno</h3>\r\n                            <Form>\r\n                                <Select\r\n                                    label={'Mês'}\r\n                                    control_id={'control_form'}\r\n                                    handleSelect={this.handleSelectMonth}\r\n                                    options={this.createMonthOprions()}\r\n                                />\r\n                                <Select\r\n                                    label={'Ano'}\r\n                                    control_id={'control_form'}\r\n                                    handleSelect={this.handleSelectYear}\r\n                                    options={this.createYearOptions()}\r\n                                />\r\n                                <Button onClick={this.makeRequests} bsStyle='primary'>Pesquisar</Button>\r\n                            </Form>\r\n                        </div>\r\n                        <div className={'chart'}>\r\n                            <BarChart\r\n                                width={500}\r\n                                heigth={500}\r\n                                xname={''}\r\n                                data_key={[\r\n                                    { key: 'manha', color: 'blue', stackId: 'a' },\r\n                                    { key: 'tarde', color: 'red', stackId: 'a' },\r\n                                    { key: 'noite', color: 'green', stackId: 'a' },\r\n                                    { key: 'total', color: 'yellow', stackId: null },\r\n                                ]}\r\n                                data={this.props.data}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(TacticalPage)\r\n"]},"metadata":{},"sourceType":"module"}