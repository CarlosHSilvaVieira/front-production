{"ast":null,"code":"import axios from 'axios';\nimport { map } from 'lodash';\nimport Constants from '../../../utils/constants';\nexport var operationalActions = {\n  SET_COST: 'SET_COST',\n  SET_SELECTED_ORDER: 'SET_SELECTED_ORDER',\n  GET_PRODUCTIONS_ORDERS: 'GET_PRODUCTIONS_ORDERS',\n  SET_OPTIONS: 'SET_OPTIONS'\n};\nexport var fetchProductionOrders = function fetchProductionOrders() {\n  var orders = axios.get(\"\".concat(Constants.Sales_API.address).concat(Constants.Sales_API.routes.Pedidos)).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.log(error);\n    return [{\n      id: 1,\n      quantidade: 25000,\n      dataPedido: '',\n      cliente: 'Qualquer'\n    }];\n  });\n  console.log(orders);\n  return orders;\n};\nexport var createOptionsProductionOrder = function createOptionsProductionOrder(options) {\n  return map(options, function (option) {\n    var new_option = {\n      label: option.id.toString(),\n      value: option\n    };\n    return new_option;\n  });\n};\nexport var setOptions = function setOptions(options) {\n  return {\n    type: selectActions.SET_OPTIONS,\n    payload: options\n  };\n};\nexport var fetchCostRawMaterial = function fetchCostRawMaterial() {\n  var value = axios.get(\"\".concat(Constants.Financial_API.address).concat(Constants.Financial_API.routes.CustoMateriaPrima)).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.log(error);\n    return 0;\n  });\n  console.log(value);\n  return value;\n};\nexport var fetchEmployee = function fetchEmployee() {};\nexport var setCost = function setCost(cost) {\n  return {\n    type: operationalActions.SET_COST,\n    payload: cost\n  };\n};\nexport var setSelectedOrder = function setSelectedOrder(order) {\n  return {\n    type: operationalActions.SET_SELECTED_ORDER,\n    payload: order\n  };\n};","map":{"version":3,"sources":["D:\\Documents\\React\\my-front-production\\src\\redux\\actions\\pages\\operational.ts"],"names":["axios","map","Constants","operationalActions","SET_COST","SET_SELECTED_ORDER","GET_PRODUCTIONS_ORDERS","SET_OPTIONS","fetchProductionOrders","orders","get","Sales_API","address","routes","Pedidos","then","response","data","catch","error","console","log","id","quantidade","dataPedido","cliente","createOptionsProductionOrder","options","option","new_option","label","toString","value","setOptions","type","selectActions","payload","fetchCostRawMaterial","Financial_API","CustoMateriaPrima","fetchEmployee","setCost","cost","setSelectedOrder","order"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AAKA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAO,IAAMC,kBAAkB,GAAG;AAE9BC,EAAAA,QAAQ,EAAE,UAFoB;AAG9BC,EAAAA,kBAAkB,EAAE,oBAHU;AAI9BC,EAAAA,sBAAsB,EAAE,wBAJM;AAK9BC,EAAAA,WAAW,EAAE;AALiB,CAA3B;AAQP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAEvC,MAAMC,MAA2C,GAAGT,KAAK,CAACU,GAAN,WAAaR,SAAS,CAACS,SAAV,CAAoBC,OAAjC,SAA2CV,SAAS,CAACS,SAAV,CAAoBE,MAApB,CAA2BC,OAAtE,GACnDC,IADmD,CAC9C,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAvB;AAAA,GAD8C,EAEnDC,KAFmD,CAE7C,UAACC,KAAD,EAAW;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAoB,WAAO,CAAC;AAAEG,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,UAAU,EAAE,KAArB;AAA4BC,MAAAA,UAAU,EAAE,EAAxC;AAA4CC,MAAAA,OAAO,EAAE;AAArD,KAAD,CAAP;AAA4E,GAFhE,CAApD;AAIAL,EAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AAEA,SAAOA,MAAP;AACH,CATM;AAWP,OAAO,IAAMiB,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,OAAD,EAAsF;AAE9H,SAAO1B,GAAG,CAAC0B,OAAD,EAAU,UAACC,MAAD,EAAsC;AAEtD,QAAMC,UAAqD,GAAG;AAC1DC,MAAAA,KAAK,EAAEF,MAAM,CAACN,EAAP,CAAUS,QAAV,EADmD;AAE1DC,MAAAA,KAAK,EAAEJ;AAFmD,KAA9D;AAKA,WAAOC,UAAP;AACH,GARS,CAAV;AASH,CAXM;AAaP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACN,OAAD;AAAA,SAAsC;AAC5DO,IAAAA,IAAI,EAAEC,aAAa,CAAC5B,WADwC;AAE5D6B,IAAAA,OAAO,EAAET;AAFmD,GAAtC;AAAA,CAAnB;AAMP,OAAO,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAEtC,MAAML,KAAsB,GAAGhC,KAAK,CAACU,GAAN,WAAaR,SAAS,CAACoC,aAAV,CAAwB1B,OAArC,SAA+CV,SAAS,CAACoC,aAAV,CAAwBzB,MAAxB,CAA+B0B,iBAA9E,GAC9BxB,IAD8B,CACzB,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAvB;AAAA,GADyB,EAE9BC,KAF8B,CAExB,UAACC,KAAD,EAAW;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAoB,WAAO,CAAP;AAAU,GAFnB,CAA/B;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AAEA,SAAOA,KAAP;AACH,CATM;AAWP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,GAAM,CAElC,CAFM;AAIP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAmB;AAEtCR,IAAAA,IAAI,EAAE/B,kBAAkB,CAACC,QAFa;AAGtCgC,IAAAA,OAAO,EAAEM;AAH6B,GAAnB;AAAA,CAAhB;AAMP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD;AAAA,SAAiB;AAE7CV,IAAAA,IAAI,EAAE/B,kBAAkB,CAACE,kBAFoB;AAG7C+B,IAAAA,OAAO,EAAEQ;AAHoC,GAAjB;AAAA,CAAzB","sourcesContent":["import axios from 'axios'\r\nimport { map } from 'lodash'\r\n\r\nimport { OptionInterface } from './../../../interfaces/option';\r\nimport { ProductionOrderInterface } from '../../../interfaces/production_order'\r\n\r\nimport Constants from '../../../utils/constants'\r\n\r\nexport const operationalActions = {\r\n\r\n    SET_COST: 'SET_COST',\r\n    SET_SELECTED_ORDER: 'SET_SELECTED_ORDER',\r\n    GET_PRODUCTIONS_ORDERS: 'GET_PRODUCTIONS_ORDERS',\r\n    SET_OPTIONS: 'SET_OPTIONS',\r\n}\r\n\r\nexport const fetchProductionOrders = () => {\r\n\r\n    const orders: Promise<ProductionOrderInterface[]> = axios.get(`${Constants.Sales_API.address}${Constants.Sales_API.routes.Pedidos}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => { console.log(error); return [{ id: 1, quantidade: 25000, dataPedido: '', cliente: 'Qualquer' }] })\r\n\r\n    console.log(orders)\r\n\r\n    return orders\r\n}\r\n\r\nexport const createOptionsProductionOrder = (options: ProductionOrderInterface[]): OptionInterface<ProductionOrderInterface>[] => {\r\n\r\n    return map(options, (option: ProductionOrderInterface) => {\r\n\r\n        const new_option: OptionInterface<ProductionOrderInterface> = {\r\n            label: option.id.toString(),\r\n            value: option\r\n        }\r\n\r\n        return new_option\r\n    })\r\n}\r\n\r\nexport const setOptions = (options: OptionInterface<any>[]) => ({\r\n    type: selectActions.SET_OPTIONS,\r\n    payload: options\r\n})\r\n\r\n\r\nexport const fetchCostRawMaterial = () => {\r\n\r\n    const value: Promise<number> = axios.get(`${Constants.Financial_API.address}${Constants.Financial_API.routes.CustoMateriaPrima}`)\r\n    .then((response) => response.data)\r\n    .catch((error) => { console.log(error); return 0 })\r\n\r\n    console.log(value)\r\n\r\n    return value\r\n}\r\n\r\nexport const fetchEmployee = () => {\r\n\r\n}\r\n\r\nexport const setCost = (cost: number) => ({\r\n    \r\n    type: operationalActions.SET_COST,\r\n    payload: cost,\r\n})\r\n\r\nexport const setSelectedOrder = (order: any) => ({\r\n\r\n    type: operationalActions.SET_SELECTED_ORDER,\r\n    payload: order,\r\n})"]},"metadata":{},"sourceType":"module"}